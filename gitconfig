[user]
    name = Pierre Guilleminot
    email = pierre.guilleminot@gmail.com
[alias]
    st = status -s
    a = add
    cim = commit -m
    b = branch -vvv
    br = branch
    co = checkout
    rso = remote show origin
    cia = commit --reedit-message=HEAD
    rbc = rebase --continue
    rba = rebase --abort
    mt = mergetool
    fa = fetch --all
    pr = pull --rebase
    pa = pull --all

    d = diff
    ds = diff --staged
    wd = diff --word-diff

    amend = commit --amend

    sl = stash list
    sp = stash pop
    ss = stash save
    sa = stash apply
    so = stash show -p
    sd = stash drop

    lol = log --graph --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short
    lg = log --ignore-space-change --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative --branches=*
    lgp = log -p --ignore-space-change --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative --branches=*
    lgs = log --name-only --stat --ignore-space-change --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative --branches=*
    mylog = "!git log --author=\"`git config --get user.name`\""
    mylg = "!git lg --author=\"`git config --get user.name`\""
    mylgs = "!git lgs --author=\"`git config --get user.name`\""
    mylgp = "!git lgp --author=\"`git config --get user.name`\""

    msg = commit --allow-empty -m
    unstage = reset HEAD --
    last = log -1 HEAD

    undo = reset --soft HEAD^

    ; all new commits after you fetched, with stats, but excluding merges
    lc = log ORIG_HEAD.. --stat --no-merges

    ; Simple diff wrappers
    changes = diff --name-status -r
    diffstat = diff --stat -r

    ; Spelunking of the project's history
    whois = "!sh -c 'git log -i -1 --pretty=\"format:%an <%ae>\n\" --author=\"$1\"' -"
    whatis = show -s --pretty='tformat:%h (%s, %ad)' --date=short

    ; list aliases
    aliases = !git config --get-regexp 'alias.*' | colrm 1 6 | sed 's/[ ]/ = /' | sort

    ; remote
    pruno = remote prune origin
[color]
    branch = auto
    diff = auto
    status = auto
    interactive = auto
    ui = auto
    pager = true
[push]
    default = current
[core]
    whitespace = trailing-space,space-before-tab
    editor = vim -f
    excludesfile = ~/.gitignore
    pager = less -c
